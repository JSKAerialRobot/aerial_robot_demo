<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="target_tf_name" default="target_object"/>
  <arg name="cheating_fire"  default= "False" /> <!-- use primitive object instead of real fire -->
  <arg name="horizontal_vio" default="False" />
  <arg name="headless" default="True" />
  <arg name="motion_config_filename" default="motion_outdoor.yaml"/>
  <arg name="waypoint_config_filename" default="waypoint_simulation.yaml"/>
  <arg name="dummy_target" default="False"/>
  <arg name="dummy_x" default="0"/>
  <arg name="dummy_y" default="0"/>
  <arg name="dummy_z" default="0"/>
  <arg name="skip_search" default="false"/>
  <arg name="use_rs_d435" default="false"/>

  <arg name="all_contour" default="true" unless="$(arg use_rs_d435)"/>
  <arg name="contour_area_min_thre"  default= "0.1" unless="$(arg use_rs_d435)"/>

  <arg name="frame_id" default="target_object" if="$(arg use_rs_d435)"/>
  <arg name="all_contour" default="false" if="$(arg use_rs_d435)"/>
  <arg name="contour_area_min_thre"  default= "0.01" if="$(arg use_rs_d435)"/>
  <arg name="object_height"  default= "0.3" if="$(arg use_rs_d435)"/>

  ##########  basic bringup file ########
  <include file="$(find mbzirc2020_task3_common)/launch/bringup.launch" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
    <arg name="estimate_mode"  value= "$(arg estimate_mode)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="horizontal_vio" value="$(arg horizontal_vio)" />
    <arg name="cheating_fire"  value= "$(arg cheating_fire)" />
    <arg name="use_rsd435" value="$(arg use_rs_d435)" />
  </include>

  ########## recognition ###############
  ########## recognition for FLIR ###############
    ########### real machine #############
    <include file="$(find mbzirc2020_task3_tasks)/launch/find_ground_fire.launch"  if="$(eval real_machine and not use_rs_d435 and not dummy_target)">
      <arg name="all_contour" value="$(arg all_contour)" />
    </include>

    ########### simulation ###############
    <include file="$(find aerial_robot_perception)/launch/single_color_ground_object_detection.launch" if="$(eval simulation and not use_rs_d435 and not dummy_target)">
      <arg name="image_topic" value="/flir/image_raw"/>
      <arg name="camera_info_topic" value="/flir/camera_info"/>
      <arg name="output_screen" value="true"/>

      <!-- TODO: please set following paramters in yaml file -->
      <!-- object property -->
      <arg name="object_height" value="0.02"/>

      <!-- red color object -->
      <arg name="contour_area_size" value="0.0"/>
      <arg name="contour_area_min_thre" value="$(arg contour_area_min_thre)"/>
      <arg name="s_limit_max" value="255" />
      <arg name="s_limit_min" value="60" />
      <arg name="v_limit_max" value="255" />
      <arg name="v_limit_min" value="60" />
    </include>

  ########## recognition for Realsense D435 ###############
  <group if="$(arg use_rs_d435)">
    ########### real machine #############
    <node pkg="timed_roslaunch" type="timed_roslaunch.sh"
            args="3 realsense2_camera rs_rgbd.launch camera:=rs_d435 depth_fps:=15 infra_fps:=15 color_fps:=15" name="timed_roslaunch" output="screen" if="$(arg real_machine)"/>

    <node pkg="nodelet" type="nodelet" name="object_detection_nodelet" args="manager" />

    <include file="$(find opencv_apps)/launch/hsv_color_filter.launch" >
      <arg name="node_name" value="hsv_color_filter" />
      <arg name="image" value="/rs_d435/color/image_rect_color"/>
      <arg name="h_limit_max" value="255" doc="The maximum allowed field value Hue" />
      <arg name="h_limit_min" value="0" doc="The minimum allowed field value Hue" />
      <arg name="s_limit_max" value="255" doc="The maximum allowed field value Saturation" />
      <arg name="s_limit_min" value="60" doc="The minimum allowed field value Saturation" />
      <arg name="v_limit_max" value="255" doc="The maximum allowed field value Value" />
      <arg name="v_limit_min" value="60" doc="The minimum allowed field value Value" />
      <arg name="debug_view" value="false" />
    </include>

    <node name="erode_mask_image"
          pkg="nodelet" type="nodelet"
          args="load jsk_perception/ErodeMaskImage object_detection_nodelet">
      <remap from="~input" to="hsv_color_filter/image" />
      <rosparam>
        method: 0
        size: 3
      </rosparam>
    </node>
    <node name="dilate_mask_image"
          pkg="nodelet" type="nodelet"
          args="load jsk_perception/DilateMaskImage object_detection_nodelet">
      <remap from="~input" to="erode_mask_image/output" />
      <rosparam>
        method: 0
        size: 3
      </rosparam>
    </node>

    <node pkg="nodelet" type="nodelet" name="find_ground_fire"
      args="load aerial_robot_perception/GroundObjectDetection object_detection_nodelet" output="screen">
      <remap from="image" to="dilate_mask_image/output" />
      <remap from="camera_info" to="/rs_d435/color/camera_info"/>
      <param name="frame_id" value="$(arg frame_id)"/>
      <param name="object_height" value="$(arg object_height)"/>
      <param name="contour_area_size" value="0.0"/>
      <param name="contour_area_margin" value="0.0"/>
      <param name="contour_area_min_thre" value="$(arg contour_area_min_thre)"/>
      <param name="all_contour" value="$(arg all_contour)"/>
      <param name="debug_view" value="false"/>
    </node>
  </group>

  ########### dummy target #############
  <node pkg="mbzirc2020_task3_tasks" type="dummy_target_publisher.py" name="dummy_target_publisher" output="screen" if="$(arg dummy_target)">
    <param name="dummy_x" value="$(arg dummy_x)"/>
    <param name="dummy_y" value="$(arg dummy_y)"/>
    <param name="dummy_z" value="$(arg dummy_z)"/>
  </node>

  ########## motion planner ###############
  <!-- <node pkg="mbzirc2020_task3_tasks" type="motion.py" name="task3_motion_planner" output="screen"> -->
  <node pkg="mbzirc2020_task3_tasks" type="find_ground_fire.py" name="task3_motion_planner" output="screen">
    <param name="target_tf_name" value="$(arg target_tf_name)"/>
    <param name="is_bypass" value="$(arg skip_search)"/>
    <rosparam file="$(find mbzirc2020_task3_tasks)/config/$(arg motion_config_filename)" command="load"/>
    <rosparam file="$(find mbzirc2020_task3_tasks)/config/$(arg waypoint_config_filename)" command="load"/>
  </node>

  ########## rosbag recorder ##############
  <node pkg="mbzirc2020_task3_tasks" type="rosbag.sh" name="rosbag">
  </node>
</launch>
