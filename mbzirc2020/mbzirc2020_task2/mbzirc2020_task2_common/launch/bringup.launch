<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="sim_estimate_mode"  default= "2" />
  <arg name="horizontal_vio" default="False" />
  <arg name="passive_gripper" default="False"/>
  <arg name="ring_gripper" default="False"/>
  <arg name="ball_joint_gripper" default="True"/>
  <arg name="rtk_gps" default="True"/>
  <arg name="robot_id" default="" />
  <arg name="worldtype" default="default" />
  <arg name="headless" default="True" />
  <arg name="rviz_config_path" default="$(find mbzirc2020_task2_simulation)/config/rviz_config$(arg robot_id)"/>
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="0.5"/>
  <arg name="spawn_yaw" default="0.0"/>
  <arg name="robot_ns" value="hydrus$(arg robot_id)" />
  <arg name="launch_gazebo" default="True" />
  <arg name="battery_type" default="1"/>

  <param name="/simulation" value="$(arg simulation)"/>

  ##########  basic bringup file ########
  <include file="$(find mbzirc2020_task2_common)/launch/base/base_bringup.launch" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
    <arg name="estimate_mode"  value= "$(arg estimate_mode)" />
    <arg name="sim_estimate_mode"  value= "$(arg sim_estimate_mode)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="horizontal_vio" value="$(arg horizontal_vio)" />
    <arg name="worldtype" value="$(find mbzirc2020_task2_simulation)/gazebo_model/world/mbzirc2020_task2_$(arg worldtype).world" />
    <arg name="task" value="2" />
    <arg name="model_suffix" value="_passive_gripper" if="$(arg passive_gripper)"/>
    <arg name="model_suffix" value="_ring_gripper" if="$(arg ring_gripper)"/>
    <arg name="model_suffix" value="_ball_joint_gripper"/>
    <arg name="spawn_x" value="$(arg spawn_x)"/>
    <arg name="spawn_y" value="$(arg spawn_y)"/>
    <arg name="spawn_z" value="$(arg spawn_z)"/>
    <arg name="spawn_yaw" value="$(arg spawn_yaw)"/>
    <arg name="rviz_config_path" value="$(arg rviz_config_path)"/>
    <arg name="robot_id" value="$(arg robot_id)" />
    <arg name="launch_gazebo" value="$(arg launch_gazebo)" />
    <arg name="battery_type" value="$(arg battery_type)"/>
    <arg name="rtk_gps" value="$(arg rtk_gps)"/>
  </include>

  ########## overwrite Servo.yaml ###########
  <rosparam file="$(find mbzirc2020_task2_common)/config/Servo.yaml" command="load" ns="$(arg robot_ns)" />

  ########## servo for realsense d435  ########
  <rosparam file="$(find mbzirc2020_task2_common)/config/robot_dependent/$(optenv ROBOT_ID 1)/RealsenseServo.yaml" command="load" ns="$(arg robot_ns)" />

  <node pkg="nodelet" type="nodelet" name="realsense2_camera_manager" args="manager 2>/dev/null" output="log" ns="$(arg robot_ns)/rs_d435"/>
  <node pkg="timed_roslaunch" type="timed_roslaunch.sh"
        args="3 realsense2_camera rs_rgbd.launch camera:=rs_d435 tf_prefix:=$(arg robot_ns)/rs_d435 publish_tf:=false external_manager:=true manager:=realsense2_camera_manager color_fps:=15 infra_fps:=15 depth_fps:=15 color_width:=640 color_height:=480 depth_width:=640 depth_height:=480" name="timed_roslaunch" output="log" ns="$(arg robot_ns)"  if="$(arg real_machine)"/>

  <group if="$(arg passive_gripper)">
    <rosparam if="$(arg simulation)" file="$(find mbzirc2020_task2_common)/config/_passive_gripper/MimicJoint.yaml" command="load" ns="$(arg robot_ns)" />
  </group>

  <node pkg="mbzirc2020_task2_common" type="init_camera_joint_angle.py" name="init_camera_joint_angle" ns="$(arg robot_ns)" />

  <include file="$(find mbzirc2020_task2_common)/launch/additional/gps_tf_publisher.launch" >
    <arg name="robot_ns" value="$(arg robot_ns)" />
  </include>

  ########## plane detection for alt estimation ##########
  <include file="$(find mbzirc2020_task2_common)/launch/plane_detection/multi_plane_sac_segmentation.launch">
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="manager" value="task2_recognition_manager" if="$(arg simulation)"/>
  </include>

  <node pkg="mbzirc2020_task2_common" type="base_footprint_tf_publisher.py" name="base_footprint_tf_publisher" ns="$(arg robot_ns)">
    <param name="robot_ns" value="$(arg robot_ns)"/>
  </node>

  ######## RTK GPS without NTRIP Client #############
  <group if="$(eval arg('real_machine') and not arg('simulation') and arg('rtk_gps') and arg('estimate_mode') == 0)">
    <group ns="$(arg robot_ns)">
        <include file="$(find ublox_gps)/launch/ublox_device.launch" >
          <arg name="param_file_name" value="holybro_m8p" />
          <arg name="node_name" value="rtk_gps" />
        </include>
	<rosparam file="$(find aerial_robot_base)/config/sensors/gps/ublox_rtk_m8p.yaml" command="load" />
    </group>
    <!-- please launch `roslaunch ntrip_ros ntrip_ros.launch ip:=192.168.1.141` -->
  </group>

</launch>
