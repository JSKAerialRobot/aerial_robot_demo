<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="sim_estimate_mode"  default= "2" />
  <arg name="headless" default="True" />
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/empty.world" />
  <arg name="launch_gazebo" default="True" />
  <arg name="robot_id" default="" />
  <arg name="task" default="1" />
  <arg name="model_suffix" default="" />
  <arg name="horizontal_vio" default="False" />
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="0.0"/>
  <arg name="spawn_yaw" default="0.0"/>
  <arg name="config_path" value="$(find mbzirc2020_common)/../mbzirc2020_task$(arg task)/mbzirc2020_task$(arg task)_common/config/$(arg model_suffix)"/>
  <arg name="rviz_config_path" default="$(find hydrus)/config/rviz_config"/>
  <arg name="robot_ns" value="hydrus$(arg robot_id)" />

  ###########  Parameters  ###########
  <group ns="$(arg robot_ns)">

    ###########  Basic Param  ###########
    # EGOMOTION_ESTIMATE = 0
    # EXPERIMENT_ESTIMATE = 1. for unstable mocap, use this mode
    # GROUND_TRUTH = 2
    <param name="estimation/mode" value= "$(arg sim_estimate_mode)" if="$(arg simulation)" />
    <param name="estimation/mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>

    <param name="uav_model" value= "16" />
    <rosparam file="$(arg config_path)/RobotModel.yaml" command="load" />

    ###########  Motor Config  ###########
    <rosparam file="$(find mbzirc2020_common)/config/MotorInfo.yaml" command="load" />

    ###########  Servo Config  ###########
    <rosparam file="$(find mbzirc2020_common)/config/Servo.yaml" command="load" />

    ###########  Battery Config  ###########
    <rosparam file="$(arg config_path)/Battery.yaml" command="load" />

    ###########  Control  ###########
    <rosparam file="$(arg config_path)/FlightControl.yaml" command="load" />

    ###########  Sensor Fusion  ###########
    <rosparam file="$(arg config_path)/StateEstimation.yaml" command="load" />
    <rosparam file="$(find mbzirc2020_common)/config/Simulation.yaml" command="load" if="$(eval arg('simulation') and not arg('real_machine'))"/>

    ###########  Teleop  ###########
    <rosparam file="$(arg config_path)/TeleopNavigationConfig.yaml" command="load" />
  </group>

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" ns="$(arg robot_ns)"  output="screen" >
    <param name="tf_prefix" value="$(arg robot_ns)"/>
    <param name="param_verbose" value="false"/>
    <param name="main_rate" type="double" value="40" />
  </node>

  ###########  Robot Model  ###########
  <arg name="description_mode" value="urdf" unless="$(arg simulation)" />
  <arg name="description_mode" value="gazebo" if="$(arg simulation)" />
  <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch" >
    <arg name="headless" value="$(arg headless)" />
    <arg name="robot_model" value="$(find mbzirc2020_common)/../mbzirc2020_task$(arg task)/mbzirc2020_task$(arg task)_common/robots/hydrus$(arg model_suffix).$(arg description_mode).xacro"/>
    <arg name="robot_ns" value="$(arg robot_ns)" />
    <arg name="model_options" value="horizontal_vio:=$(arg horizontal_vio)" />
    <arg name="rviz_config" value="$(arg rviz_config_path)"/>
    <arg name="rviz_init_pose" value="$(find mbzirc2020_common)/config/RvizInit.yaml" />
    <arg name="need_joint_state" value="false" if ="$(eval arg('simulation') or arg('real_machine'))"/>
  </include>

  ###########  Sensors  ###########
  <include file="$(find mbzirc2020_common)/launch/base_sensors.launch" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
    <arg name="horizontal_vio" value="$(arg horizontal_vio)" />
    <arg name="robot_ns" value="$(arg robot_ns)" />
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="aerial_robot_model" type="servo_bridge_node" name="servo_bridge"  output="screen"  ns="$(arg robot_ns)" />

  ########## Simulation in Gazebo #########
  <include file="$(find aerial_robot_simulation)/launch/simulation.launch" if = "$(eval arg('simulation') and not arg('real_machine'))" >
    <arg name="robot_ns" default="$(arg robot_ns)" />
    <arg name="gui" default="false" if="$(arg headless)" />
    <arg name="headless" default="$(arg headless)" />
    <arg name="launch_gazebo" default="$(arg launch_gazebo)" />
    <arg name="worldtype" value="$(arg worldtype)" />
    <arg name="spawn_x" value="$(arg spawn_x)" />
    <arg name="spawn_y" value="$(arg spawn_y)" />
    <arg name="spawn_z" value="$(arg spawn_z)" />
    <arg name="spawn_yaw" value="$(arg spawn_yaw)" />
  </include>

</launch>
