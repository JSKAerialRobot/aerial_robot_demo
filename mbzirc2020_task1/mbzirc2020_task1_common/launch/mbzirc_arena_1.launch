<launch>
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"  />
  <arg name="headless" default="false"/>
  <arg name="use_ground_truth" default="true" />
  <arg name="uav_name" default="hawk" />
  <arg name="start" default="true" />


  <include file="$(find mbzirc2020_task1_common)/launch/mbzirc_arena.launch" >
    <arg name="world_name" default="$(find mbzirc2020_task1_common)/gazebo_model/world/mbzirc_arena_task_1.world"/>
    <arg name="paused" default="$(arg paused)"/>
    <arg name="debug" default="$(arg debug)"/>
    <arg name="gui" default="$(arg gui)"  />
    <arg name="headless" default="$(arg headless)"/>
  </include>

  <arg name="x" value="2"/>
  <arg name="y" value="2"/>
  <arg name="z" value="0.3"/>

  <!-- Spawn simulated quadrotor uav -->
  <group ns="$(arg uav_name)">
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="name" value="$(arg uav_name)"/>
      <arg name="model" value="$(find mbzirc2020_task1_common)/urdf/hawk.urdf.xacro"/>
      <!-- <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor.gazebo.xacro"/> -->
      <arg name="use_ground_truth_for_tf" value="$(arg use_ground_truth)" />
      <arg name="use_ground_truth_for_control" value="$(arg use_ground_truth)" />
      <arg name="tf_prefix" value="$(arg uav_name)" />
      <arg name="world_frame" value="/world" />
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>
      <arg name="z" value="$(arg z)"/>
    </include>
    <node pkg="mbzirc2020_task1_common" type="uav_teleop_keyboard" name="uav_teleop_keyboard"
          launch-prefix="xterm -e">
    </node>
    <group if="$(arg start)">
      <node pkg="mbzirc2020_task1_common" type="guard_uav_routine_flight.py" name="guard_uav_routine_flight" output="screen" respawn="false">
        <rosparam file="$(find mbzirc2020_task1_common)/config/challenge/route.yaml" command="load" />
      </node>
    </group>
    <node pkg="mbzirc2020_task1_common" type="visualize_uav_default_route.py" name="visualize_uav_default_route" output="screen" respawn="false">
      <rosparam file="$(find mbzirc2020_task1_common)/config/challenge/route.yaml" command="load" />
    </node>
  </group>


</launch>
